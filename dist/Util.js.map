{"version":3,"sources":["../src/Util.js"],"names":["Util","target","source","deep","sourceKeys","TypeError","Array","isArray","i","length","push","Object","keys","key","descriptor","getOwnPropertyDescriptor","get","enumerable","extend"],"mappings":";;;;;;;;;;;;IAAMA,I;;;;;;;;;AAEF;;;;;;;+BAOcC,M,EAAQC,M,EAAoB;AAAA,gBAAZC,IAAY,uEAAP,KAAO;;AACtC,gBAAIC,aAAa,EAAjB;;AAEA,gBAAI,CAACH,MAAD,IAAW,QAAOA,MAAP,yCAAOA,MAAP,OAAkB,QAAjC,EAA2C;AACvC,sBAAM,IAAII,SAAJ,CAAc,6CAAd,CAAN;AACH;;AAED,gBAAIC,MAAMC,OAAN,CAAcL,MAAd,CAAJ,EAA2B;AACvB,qBAAK,IAAIM,IAAI,CAAb,EAAgBA,IAAIN,OAAOO,MAA3B,EAAmCD,GAAnC,EAAwC;AACpCJ,+BAAWM,IAAX,CAAgBF,CAAhB;AACH;AACJ,aAJD,MAIO,IAAIN,MAAJ,EAAY;AACfE,6BAAaO,OAAOC,IAAP,CAAYV,MAAZ,CAAb;AACH;;AAED,iBAAK,IAAIM,KAAI,CAAb,EAAgBA,KAAIJ,WAAWK,MAA/B,EAAuCD,IAAvC,EAA4C;AACxC,oBAAIK,MAAMT,WAAWI,EAAX,CAAV;AACA,oBAAIM,aAAaH,OAAOI,wBAAP,CAAgCb,MAAhC,EAAwCW,GAAxC,CAAjB;;AAEA;;AAEA,oBAAI,OAAOC,WAAWE,GAAlB,KAA0B,UAA1B,IAAwC,CAACF,WAAWG,UAAxD,EAAoE;;AAEpE,oBAAI,CAACd,IAAD,IAAS,QAAOD,OAAOW,GAAP,CAAP,MAAuB,QAAhC,IAA4CX,OAAOW,GAAP,MAAgB,IAAhE,EAAsE;AAClE;AACA;;AAEAZ,2BAAOY,GAAP,IAAcX,OAAOW,GAAP,CAAd;AACH,iBALD,MAKO,IAAIP,MAAMC,OAAN,CAAcL,OAAOW,GAAP,CAAd,CAAJ,EAAgC;AACnC;;AAEA,wBAAI,CAACZ,OAAOY,GAAP,CAAL,EAAkB;AACdZ,+BAAOY,GAAP,IAAc,EAAd;AACH;;AAED,yBAAKK,MAAL,CAAYjB,OAAOY,GAAP,CAAZ,EAAyBX,OAAOW,GAAP,CAAzB,EAAsCV,IAAtC;AACH,iBARM,MAQA;AACH;;AAEA,wBAAI,CAACF,OAAOY,GAAP,CAAL,EAAkB;AACdZ,+BAAOY,GAAP,IAAc,EAAd;AACH;;AAED,yBAAKK,MAAL,CAAYjB,OAAOY,GAAP,CAAZ,EAAyBX,OAAOW,GAAP,CAAzB,EAAsCV,IAAtC;AACH;AACJ;;AAED,mBAAOF,MAAP;AACH;;;;;;kBAGUD,I","file":"Util.js","sourcesContent":["class Util {\n\n    /**\n     * @param   {object}    target\n     * @param   {object}    source\n     * @param   {boolean}   [deep=false]\n     * @return  {object}\n     */\n\n    static extend(target, source, deep=false) {\n        let sourceKeys = [];\n\n        if (!target || typeof target !== 'object') {\n            throw new TypeError('[Util#extend] Target must be a valid object');\n        }\n\n        if (Array.isArray(source)) {\n            for (let i = 0; i < source.length; i++) {\n                sourceKeys.push(i);\n            }\n        } else if (source) {\n            sourceKeys = Object.keys(source);\n        }\n\n        for (let i = 0; i < sourceKeys.length; i++) {\n            let key = sourceKeys[i];\n            let descriptor = Object.getOwnPropertyDescriptor(source, key);\n\n            // Skip non-enumerable computed properties\n\n            if (typeof descriptor.get === 'function' && !descriptor.enumerable) continue;\n\n            if (!deep || typeof source[key] !== 'object' || source[key] === null) {\n                // All non-object primitives, or all properties if\n                // shallow extend\n\n                target[key] = source[key];\n            } else if (Array.isArray(source[key])) {\n                // Arrays\n\n                if (!target[key]) {\n                    target[key] = [];\n                }\n\n                this.extend(target[key], source[key], deep);\n            } else {\n                // Objects\n\n                if (!target[key]) {\n                    target[key] = {};\n                }\n\n                this.extend(target[key], source[key], deep);\n            }\n        }\n\n        return target;\n    }\n}\n\nexport default Util;"]}