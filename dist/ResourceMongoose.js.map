{"version":3,"sources":["../src/ResourceMongoose.js"],"names":["ResourceBase","require","ObjectId","Types","ResourceMongoose","args","Array","prototype","concat","apply","arguments","_","Private","bind","getOne","get","create","update","delete","flushCache","Object","seal","config","Config","init","assign","constructor","query","self","wasCached","requestId","getRequestId","activeRequests","Promise","resolve","then","resources","dbQuery","pageNumber","entriesPerPage","startIndex","sort","parseInt","Infinity","keys","length","enableCache","readFromCache","constructMongoQuery","Model","find","skip","limit","populate","documents","all","map","document","slice","call","unshift","transformDocument","writeToCache","key","value","isArray","$in","resource","toObject","virtuals","_id","__v","stripMongoCruft","model","ViewModel","resourceProvider","mongoObject","prop","toString","Date","toISOString","payload","save","options","findOneAndUpdate","upsert","findOne","_document","findOneAndRemove","ConfigBase","module","exports"],"mappings":"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","file":"ResourceMongoose.js","sourcesContent":["/**\n * FIXME: Needs migrating over to new format\n */\n\nvar ResourceBase = require('./resource-base');\nvar ObjectId     = require('mongoose').Types.ObjectId;\n\nvar ResourceMongoose = function() {\n    var args = Array.prototype.concat.apply([null], arguments);\n    var _    = new (ResourceMongoose.Private.bind.apply(ResourceMongoose.Private, args))();\n\n    this.getOne         = _.getOne.bind(_);\n    this.get            = _.get.bind(_);\n    this.create         = _.create.bind(_);\n    this.update         = _.update.bind(_);\n    this.delete         = _.delete.bind(_);\n    this.flushCache     = _.flushCache.bind(_);\n\n    Object.seal(this);\n};\n\nResourceMongoose.Private = function() {\n    ResourceBase.apply(this, arguments);\n\n    this.config = new ResourceMongoose.Config();\n\n    Object.seal(this);\n\n    this.init.apply(this, arguments);\n};\n\nResourceMongoose.Private.prototype = Object.create(ResourceBase.prototype);\n\nObject.assign(ResourceMongoose.Private.prototype, {\n    constructor: ResourceMongoose.Private,\n\n    /**\n     * @private\n     * @param   {object} [query]\n     * @return  {Promise<object[]>}\n     */\n\n    get: function(query) {\n        var self       = this;\n        var wasCached  = false;\n        var requestId  = '';\n\n        requestId = ResourceBase.getRequestId(arguments);\n\n        if (self.activeRequests[requestId]) {\n            // One or more identical requests already exists, return reference to original promise\n\n            return self.activeRequests[requestId];\n        }\n\n        return (self.activeRequests[requestId] = (Promise.resolve()\n            .then(function() {\n                var resources       = null;\n                var dbQuery         = null;\n                var pageNumber      = 1;\n                var entriesPerPage  = void(0);\n                var startIndex      = 0;\n                var sort            = '';\n\n                // TODO: make DB-specifics configurable to resource - resource should be generic by default\n\n                if (query && query.entriesPerPage) {\n                    // Set pagination instructions\n\n                    pageNumber      = parseInt(query.pageNumber);\n                    entriesPerPage  = parseInt(query.entriesPerPage);\n\n                    if (entriesPerPage < Infinity) {\n                        startIndex = entriesPerPage * (pageNumber - 1);\n                    }\n\n                    sort = '-_id';\n                }\n\n                if (!query || !Object.keys(query).length) {\n                    sort = '-_id';\n                }\n\n                if (self.config.enableCache) {\n                    // Find resources already in the cache\n\n                    resources = self.readFromCache(query);\n                }\n\n                if (resources) {\n                    wasCached = true;\n\n                    return resources;\n                } else {\n                    dbQuery = self.constructMongoQuery(query);\n\n                    return self.config.Model.find(dbQuery, '-__v')\n                        .sort(sort)\n                        .skip(startIndex)\n                        .limit(entriesPerPage)\n                        .populate(self.config.populate)\n                        .then(function(documents) {\n                            return Promise.all(documents.map(function(document) {\n                                var args = Array.prototype.slice.call(arguments, 1);\n\n                                args.unshift(document);\n\n                                return self.transformDocument.apply(self, args);\n                            }));\n                        });\n                }\n            })\n            .then(function(resources) {\n                delete self.activeRequests[requestId];\n\n                if (self.config.enableCache && !wasCached) {\n                    self.writeToCache(query, resources);\n\n                    return self.readFromCache(query);\n                } else {\n                    return resources;\n                }\n            })));\n    },\n\n    /**\n     * @private\n     * @param   {object}    query\n     * @return  {object}\n     */\n\n    constructMongoQuery: function(query) {\n        var dbQuery = {};\n        var key     = '';\n        var value   = null;\n\n        for (key in query) {\n            value = query[key];\n\n            if (Array.isArray(value)) {\n                value = {\n                    $in: value\n                };\n            }\n\n            if (key === 'id') {\n                // Rename id to _id if present in query\n\n                dbQuery['_id'] = value;\n            } else {\n                dbQuery[key] = value;\n            }\n        }\n\n        delete dbQuery.pageNumber;\n        delete dbQuery.entriesPerPage;\n\n        return dbQuery;\n    },\n\n    /**\n     * @private\n     * @param   {Document} document\n     * @return  {Promise<object>}\n     */\n\n    transformDocument: function(document) {\n        var self     = this;\n        var resource = null;\n        var args     = null;\n\n        return Promise.resolve()\n            .then(function() {\n                args = Array.prototype.slice(arguments, 1);\n\n                resource = document.toObject({\n                    virtuals: true\n                });\n\n                delete resource._id;\n                delete resource.__v;\n\n                self.stripMongoCruft(resource);\n            })\n            .then(function() {\n                var model = null;\n\n                if (typeof self.config.ViewModel === 'function') {\n                    model = new self.config.ViewModel();\n\n                    resource = Object.assign(model, resource);\n\n                    if (typeof model.init === 'function') {\n                        args.unshift(self.resourceProvider);\n\n                        return model.init.apply(model, args);\n                    }\n                }\n            })\n            .then(function() {\n                return resource;\n            });\n    },\n\n    /**\n     * Convert any Mongo ObjectId values to strings.\n     *\n     * @private\n     * @param {object} mongoObject\n     */\n\n    stripMongoCruft: function(mongoObject) {\n        var self    = this,\n            key     = null,\n            prop    = null;\n\n        for (key in mongoObject) {\n            prop = mongoObject[key];\n\n            if (!prop) continue;\n\n            if (prop instanceof ObjectId) {\n                mongoObject[key] = prop.toString();\n            } else if (prop instanceof Date) {\n                mongoObject[key] = prop.toISOString();\n            } else if (typeof prop === 'object') {\n                self.stripMongoCruft(prop);\n            }\n        }\n    },\n\n    /**\n     * @param   {object} payload\n     * @return  {Promise<object>}\n     */\n\n    create: function(payload) {\n        var self        = this,\n            resource    = null;\n\n        resource = new self.config.Model(payload);\n\n        return resource.save()\n            .then(function(document) {\n                return self.transformDocument(document);\n            });\n    },\n\n    /**\n     * @param   {object}    query\n     * @param   {object}    payload\n     * @param   {object}   [options]\n     * @return  {Promise}\n     */\n\n    update: function(query, payload, options) {\n        var self        = this,\n            dbQuery     = null;\n\n        options = options || {};\n\n        dbQuery = self.constructMongoQuery(query);\n\n        return self.config.Model.findOneAndUpdate(dbQuery, payload, {\n            upsert: options.upsert ? true : false\n        })\n            .then(function(document) {\n                return self.transformDocument(document);\n            });\n    },\n\n    /**\n     * @param   {object}    query\n     * @param   {object}    [options]\n     * @return  {Promise}\n     */\n\n    delete: function(query, options) {\n        var self        = this;\n        var dbQuery     = null;\n        var document    = null;\n\n        options = options || {};\n\n        dbQuery = self.constructMongoQuery(query);\n\n        return self.config.Model.findOne(dbQuery, '-__v')\n            .then(function(_document) {\n                document = _document;\n\n                return self.config.Model.findOneAndRemove(dbQuery);\n            })\n            .then(function() {\n                return self.transformDocument(document);\n            });\n    }\n});\n\nResourceMongoose.Config = function() {\n    ResourceBase.ConfigBase.call(this);\n\n    this.Model     = null;\n    this.ViewModel = null;\n    this.populate  = '';\n\n    Object.seal(this);\n};\n\nmodule.exports = ResourceMongoose;"]}